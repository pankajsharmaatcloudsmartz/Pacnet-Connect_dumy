/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.pacnet.connect.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.pacnet.connect.model.FacilityAssignment;
import com.pacnet.connect.model.FacilityAssignmentModel;
import com.pacnet.connect.model.FacilityAssignmentSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the FacilityAssignment service. Represents a row in the &quot;Facility_Assignment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.pacnet.connect.model.FacilityAssignmentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FacilityAssignmentImpl}.
 * </p>
 *
 * @author CloudSmartz
 * @see FacilityAssignmentImpl
 * @see com.pacnet.connect.model.FacilityAssignment
 * @see com.pacnet.connect.model.FacilityAssignmentModel
 * @generated
 */
@JSON(strict = true)
public class FacilityAssignmentModelImpl extends BaseModelImpl<FacilityAssignment>
	implements FacilityAssignmentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a facility assignment model instance should use the {@link com.pacnet.connect.model.FacilityAssignment} interface instead.
	 */
	public static final String TABLE_NAME = "Facility_Assignment";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "Customer_ID", Types.BIGINT },
			{ "Facility_ID", Types.BIGINT },
			{ "Facility_Service_ID", Types.BIGINT },
			{ "IsActive", Types.BOOLEAN },
			{ "Created_On", Types.TIMESTAMP },
			{ "Created_By", Types.VARCHAR },
			{ "Updated_On", Types.TIMESTAMP },
			{ "Updated_By", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Facility_Assignment (ID LONG not null primary key IDENTITY,Customer_ID LONG,Facility_ID LONG,Facility_Service_ID LONG,IsActive BOOLEAN,Created_On DATE null,Created_By VARCHAR(75) null,Updated_On DATE null,Updated_By VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Facility_Assignment";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.pacnet.connect.model.FacilityAssignment"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.pacnet.connect.model.FacilityAssignment"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.pacnet.connect.model.FacilityAssignment"),
			true);
	public static long CUSTOMERID_COLUMN_BITMASK = 1L;
	public static long FACILITYSERVICEID_COLUMN_BITMASK = 2L;
	public static long FACILTYID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static FacilityAssignment toModel(FacilityAssignmentSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		FacilityAssignment model = new FacilityAssignmentImpl();

		model.setId(soapModel.getId());
		model.setCustomerId(soapModel.getCustomerId());
		model.setFaciltyId(soapModel.getFaciltyId());
		model.setFacilityServiceId(soapModel.getFacilityServiceId());
		model.setIsActive(soapModel.getIsActive());
		model.setCreatedOn(soapModel.getCreatedOn());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setUpdatedOn(soapModel.getUpdatedOn());
		model.setUpdatedBy(soapModel.getUpdatedBy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<FacilityAssignment> toModels(
		FacilityAssignmentSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<FacilityAssignment> models = new ArrayList<FacilityAssignment>(soapModels.length);

		for (FacilityAssignmentSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.pacnet.connect.model.FacilityAssignment"));

	public FacilityAssignmentModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return FacilityAssignment.class;
	}

	public String getModelClassName() {
		return FacilityAssignment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("customerId", getCustomerId());
		attributes.put("faciltyId", getFaciltyId());
		attributes.put("facilityServiceId", getFacilityServiceId());
		attributes.put("isActive", getIsActive());
		attributes.put("createdOn", getCreatedOn());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("updatedOn", getUpdatedOn());
		attributes.put("updatedBy", getUpdatedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long customerId = (Long)attributes.get("customerId");

		if (customerId != null) {
			setCustomerId(customerId);
		}

		Long faciltyId = (Long)attributes.get("faciltyId");

		if (faciltyId != null) {
			setFaciltyId(faciltyId);
		}

		Long facilityServiceId = (Long)attributes.get("facilityServiceId");

		if (facilityServiceId != null) {
			setFacilityServiceId(facilityServiceId);
		}

		Boolean isActive = (Boolean)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		Date createdOn = (Date)attributes.get("createdOn");

		if (createdOn != null) {
			setCreatedOn(createdOn);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date updatedOn = (Date)attributes.get("updatedOn");

		if (updatedOn != null) {
			setUpdatedOn(updatedOn);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}
	}

	@JSON
	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	@JSON
	public long getCustomerId() {
		return _customerId;
	}

	public void setCustomerId(long customerId) {
		_columnBitmask |= CUSTOMERID_COLUMN_BITMASK;

		if (!_setOriginalCustomerId) {
			_setOriginalCustomerId = true;

			_originalCustomerId = _customerId;
		}

		_customerId = customerId;
	}

	public long getOriginalCustomerId() {
		return _originalCustomerId;
	}

	@JSON
	public long getFaciltyId() {
		return _faciltyId;
	}

	public void setFaciltyId(long faciltyId) {
		_columnBitmask |= FACILTYID_COLUMN_BITMASK;

		if (!_setOriginalFaciltyId) {
			_setOriginalFaciltyId = true;

			_originalFaciltyId = _faciltyId;
		}

		_faciltyId = faciltyId;
	}

	public long getOriginalFaciltyId() {
		return _originalFaciltyId;
	}

	@JSON
	public long getFacilityServiceId() {
		return _facilityServiceId;
	}

	public void setFacilityServiceId(long facilityServiceId) {
		_columnBitmask |= FACILITYSERVICEID_COLUMN_BITMASK;

		if (!_setOriginalFacilityServiceId) {
			_setOriginalFacilityServiceId = true;

			_originalFacilityServiceId = _facilityServiceId;
		}

		_facilityServiceId = facilityServiceId;
	}

	public long getOriginalFacilityServiceId() {
		return _originalFacilityServiceId;
	}

	@JSON
	public boolean getIsActive() {
		return _isActive;
	}

	public boolean isIsActive() {
		return _isActive;
	}

	public void setIsActive(boolean isActive) {
		_isActive = isActive;
	}

	@JSON
	public Date getCreatedOn() {
		return _createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		_createdOn = createdOn;
	}

	@JSON
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	public Date getUpdatedOn() {
		return _updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		_updatedOn = updatedOn;
	}

	@JSON
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			FacilityAssignment.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FacilityAssignment toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (FacilityAssignment)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		FacilityAssignmentImpl facilityAssignmentImpl = new FacilityAssignmentImpl();

		facilityAssignmentImpl.setId(getId());
		facilityAssignmentImpl.setCustomerId(getCustomerId());
		facilityAssignmentImpl.setFaciltyId(getFaciltyId());
		facilityAssignmentImpl.setFacilityServiceId(getFacilityServiceId());
		facilityAssignmentImpl.setIsActive(getIsActive());
		facilityAssignmentImpl.setCreatedOn(getCreatedOn());
		facilityAssignmentImpl.setCreatedBy(getCreatedBy());
		facilityAssignmentImpl.setUpdatedOn(getUpdatedOn());
		facilityAssignmentImpl.setUpdatedBy(getUpdatedBy());

		facilityAssignmentImpl.resetOriginalValues();

		return facilityAssignmentImpl;
	}

	public int compareTo(FacilityAssignment facilityAssignment) {
		long primaryKey = facilityAssignment.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		FacilityAssignment facilityAssignment = null;

		try {
			facilityAssignment = (FacilityAssignment)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = facilityAssignment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		FacilityAssignmentModelImpl facilityAssignmentModelImpl = this;

		facilityAssignmentModelImpl._originalCustomerId = facilityAssignmentModelImpl._customerId;

		facilityAssignmentModelImpl._setOriginalCustomerId = false;

		facilityAssignmentModelImpl._originalFaciltyId = facilityAssignmentModelImpl._faciltyId;

		facilityAssignmentModelImpl._setOriginalFaciltyId = false;

		facilityAssignmentModelImpl._originalFacilityServiceId = facilityAssignmentModelImpl._facilityServiceId;

		facilityAssignmentModelImpl._setOriginalFacilityServiceId = false;

		facilityAssignmentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<FacilityAssignment> toCacheModel() {
		FacilityAssignmentCacheModel facilityAssignmentCacheModel = new FacilityAssignmentCacheModel();

		facilityAssignmentCacheModel.id = getId();

		facilityAssignmentCacheModel.customerId = getCustomerId();

		facilityAssignmentCacheModel.faciltyId = getFaciltyId();

		facilityAssignmentCacheModel.facilityServiceId = getFacilityServiceId();

		facilityAssignmentCacheModel.isActive = getIsActive();

		Date createdOn = getCreatedOn();

		if (createdOn != null) {
			facilityAssignmentCacheModel.createdOn = createdOn.getTime();
		}
		else {
			facilityAssignmentCacheModel.createdOn = Long.MIN_VALUE;
		}

		facilityAssignmentCacheModel.createdBy = getCreatedBy();

		String createdBy = facilityAssignmentCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			facilityAssignmentCacheModel.createdBy = null;
		}

		Date updatedOn = getUpdatedOn();

		if (updatedOn != null) {
			facilityAssignmentCacheModel.updatedOn = updatedOn.getTime();
		}
		else {
			facilityAssignmentCacheModel.updatedOn = Long.MIN_VALUE;
		}

		facilityAssignmentCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = facilityAssignmentCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			facilityAssignmentCacheModel.updatedBy = null;
		}

		return facilityAssignmentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", customerId=");
		sb.append(getCustomerId());
		sb.append(", faciltyId=");
		sb.append(getFaciltyId());
		sb.append(", facilityServiceId=");
		sb.append(getFacilityServiceId());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", createdOn=");
		sb.append(getCreatedOn());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", updatedOn=");
		sb.append(getUpdatedOn());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.pacnet.connect.model.FacilityAssignment");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerId</column-name><column-value><![CDATA[");
		sb.append(getCustomerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>faciltyId</column-name><column-value><![CDATA[");
		sb.append(getFaciltyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>facilityServiceId</column-name><column-value><![CDATA[");
		sb.append(getFacilityServiceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdOn</column-name><column-value><![CDATA[");
		sb.append(getCreatedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedOn</column-name><column-value><![CDATA[");
		sb.append(getUpdatedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = FacilityAssignment.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			FacilityAssignment.class
		};
	private long _id;
	private long _customerId;
	private long _originalCustomerId;
	private boolean _setOriginalCustomerId;
	private long _faciltyId;
	private long _originalFaciltyId;
	private boolean _setOriginalFaciltyId;
	private long _facilityServiceId;
	private long _originalFacilityServiceId;
	private boolean _setOriginalFacilityServiceId;
	private boolean _isActive;
	private Date _createdOn;
	private String _createdBy;
	private Date _updatedOn;
	private String _updatedBy;
	private long _columnBitmask;
	private FacilityAssignment _escapedModelProxy;
}
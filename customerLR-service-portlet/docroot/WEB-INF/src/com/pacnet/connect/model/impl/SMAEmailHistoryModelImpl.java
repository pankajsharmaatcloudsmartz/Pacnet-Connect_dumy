/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.pacnet.connect.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.pacnet.connect.model.SMAEmailHistory;
import com.pacnet.connect.model.SMAEmailHistoryModel;
import com.pacnet.connect.model.SMAEmailHistorySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SMAEmailHistory service. Represents a row in the &quot;PA_SMA_Email_History&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.pacnet.connect.model.SMAEmailHistoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SMAEmailHistoryImpl}.
 * </p>
 *
 * @author CloudSmartz
 * @see SMAEmailHistoryImpl
 * @see com.pacnet.connect.model.SMAEmailHistory
 * @see com.pacnet.connect.model.SMAEmailHistoryModel
 * @generated
 */
@JSON(strict = true)
public class SMAEmailHistoryModelImpl extends BaseModelImpl<SMAEmailHistory>
	implements SMAEmailHistoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s m a email history model instance should use the {@link com.pacnet.connect.model.SMAEmailHistory} interface instead.
	 */
	public static final String TABLE_NAME = "PA_SMA_Email_History";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "historyType", Types.INTEGER },
			{ "emailFrom", Types.VARCHAR },
			{ "emailTo", Types.VARCHAR },
			{ "emailTitle", Types.VARCHAR },
			{ "emailContent", Types.VARCHAR },
			{ "IsActive", Types.INTEGER },
			{ "Created_On", Types.TIMESTAMP },
			{ "Created_By", Types.VARCHAR },
			{ "Updated_On", Types.TIMESTAMP },
			{ "Updated_By", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table PA_SMA_Email_History (id LONG not null primary key IDENTITY,name VARCHAR(75) null,historyType INTEGER,emailFrom VARCHAR(75) null,emailTo VARCHAR(75) null,emailTitle VARCHAR(75) null,emailContent VARCHAR(75) null,IsActive INTEGER,Created_On DATE null,Created_By VARCHAR(75) null,Updated_On DATE null,Updated_By VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table PA_SMA_Email_History";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.pacnet.connect.model.SMAEmailHistory"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.pacnet.connect.model.SMAEmailHistory"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SMAEmailHistory toModel(SMAEmailHistorySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SMAEmailHistory model = new SMAEmailHistoryImpl();

		model.setId(soapModel.getId());
		model.setName(soapModel.getName());
		model.setHistoryType(soapModel.getHistoryType());
		model.setEmailFrom(soapModel.getEmailFrom());
		model.setEmailTo(soapModel.getEmailTo());
		model.setEmailTitle(soapModel.getEmailTitle());
		model.setEmailContent(soapModel.getEmailContent());
		model.setIsActive(soapModel.getIsActive());
		model.setCreatedOn(soapModel.getCreatedOn());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setUpdatedOn(soapModel.getUpdatedOn());
		model.setUpdatedBy(soapModel.getUpdatedBy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SMAEmailHistory> toModels(
		SMAEmailHistorySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SMAEmailHistory> models = new ArrayList<SMAEmailHistory>(soapModels.length);

		for (SMAEmailHistorySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.pacnet.connect.model.SMAEmailHistory"));

	public SMAEmailHistoryModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return SMAEmailHistory.class;
	}

	public String getModelClassName() {
		return SMAEmailHistory.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("name", getName());
		attributes.put("historyType", getHistoryType());
		attributes.put("emailFrom", getEmailFrom());
		attributes.put("emailTo", getEmailTo());
		attributes.put("emailTitle", getEmailTitle());
		attributes.put("emailContent", getEmailContent());
		attributes.put("isActive", getIsActive());
		attributes.put("createdOn", getCreatedOn());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("updatedOn", getUpdatedOn());
		attributes.put("updatedBy", getUpdatedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Integer historyType = (Integer)attributes.get("historyType");

		if (historyType != null) {
			setHistoryType(historyType);
		}

		String emailFrom = (String)attributes.get("emailFrom");

		if (emailFrom != null) {
			setEmailFrom(emailFrom);
		}

		String emailTo = (String)attributes.get("emailTo");

		if (emailTo != null) {
			setEmailTo(emailTo);
		}

		String emailTitle = (String)attributes.get("emailTitle");

		if (emailTitle != null) {
			setEmailTitle(emailTitle);
		}

		String emailContent = (String)attributes.get("emailContent");

		if (emailContent != null) {
			setEmailContent(emailContent);
		}

		Integer isActive = (Integer)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		Date createdOn = (Date)attributes.get("createdOn");

		if (createdOn != null) {
			setCreatedOn(createdOn);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date updatedOn = (Date)attributes.get("updatedOn");

		if (updatedOn != null) {
			setUpdatedOn(updatedOn);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}
	}

	@JSON
	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	@JSON
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	@JSON
	public int getHistoryType() {
		return _historyType;
	}

	public void setHistoryType(int historyType) {
		_historyType = historyType;
	}

	@JSON
	public String getEmailFrom() {
		if (_emailFrom == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailFrom;
		}
	}

	public void setEmailFrom(String emailFrom) {
		_emailFrom = emailFrom;
	}

	@JSON
	public String getEmailTo() {
		if (_emailTo == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailTo;
		}
	}

	public void setEmailTo(String emailTo) {
		_emailTo = emailTo;
	}

	@JSON
	public String getEmailTitle() {
		if (_emailTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailTitle;
		}
	}

	public void setEmailTitle(String emailTitle) {
		_emailTitle = emailTitle;
	}

	@JSON
	public String getEmailContent() {
		if (_emailContent == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailContent;
		}
	}

	public void setEmailContent(String emailContent) {
		_emailContent = emailContent;
	}

	@JSON
	public int getIsActive() {
		return _isActive;
	}

	public void setIsActive(int isActive) {
		_isActive = isActive;
	}

	@JSON
	public Date getCreatedOn() {
		return _createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		_createdOn = createdOn;
	}

	@JSON
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	public Date getUpdatedOn() {
		return _updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		_updatedOn = updatedOn;
	}

	@JSON
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SMAEmailHistory.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SMAEmailHistory toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (SMAEmailHistory)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		SMAEmailHistoryImpl smaEmailHistoryImpl = new SMAEmailHistoryImpl();

		smaEmailHistoryImpl.setId(getId());
		smaEmailHistoryImpl.setName(getName());
		smaEmailHistoryImpl.setHistoryType(getHistoryType());
		smaEmailHistoryImpl.setEmailFrom(getEmailFrom());
		smaEmailHistoryImpl.setEmailTo(getEmailTo());
		smaEmailHistoryImpl.setEmailTitle(getEmailTitle());
		smaEmailHistoryImpl.setEmailContent(getEmailContent());
		smaEmailHistoryImpl.setIsActive(getIsActive());
		smaEmailHistoryImpl.setCreatedOn(getCreatedOn());
		smaEmailHistoryImpl.setCreatedBy(getCreatedBy());
		smaEmailHistoryImpl.setUpdatedOn(getUpdatedOn());
		smaEmailHistoryImpl.setUpdatedBy(getUpdatedBy());

		smaEmailHistoryImpl.resetOriginalValues();

		return smaEmailHistoryImpl;
	}

	public int compareTo(SMAEmailHistory smaEmailHistory) {
		long primaryKey = smaEmailHistory.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		SMAEmailHistory smaEmailHistory = null;

		try {
			smaEmailHistory = (SMAEmailHistory)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = smaEmailHistory.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<SMAEmailHistory> toCacheModel() {
		SMAEmailHistoryCacheModel smaEmailHistoryCacheModel = new SMAEmailHistoryCacheModel();

		smaEmailHistoryCacheModel.id = getId();

		smaEmailHistoryCacheModel.name = getName();

		String name = smaEmailHistoryCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			smaEmailHistoryCacheModel.name = null;
		}

		smaEmailHistoryCacheModel.historyType = getHistoryType();

		smaEmailHistoryCacheModel.emailFrom = getEmailFrom();

		String emailFrom = smaEmailHistoryCacheModel.emailFrom;

		if ((emailFrom != null) && (emailFrom.length() == 0)) {
			smaEmailHistoryCacheModel.emailFrom = null;
		}

		smaEmailHistoryCacheModel.emailTo = getEmailTo();

		String emailTo = smaEmailHistoryCacheModel.emailTo;

		if ((emailTo != null) && (emailTo.length() == 0)) {
			smaEmailHistoryCacheModel.emailTo = null;
		}

		smaEmailHistoryCacheModel.emailTitle = getEmailTitle();

		String emailTitle = smaEmailHistoryCacheModel.emailTitle;

		if ((emailTitle != null) && (emailTitle.length() == 0)) {
			smaEmailHistoryCacheModel.emailTitle = null;
		}

		smaEmailHistoryCacheModel.emailContent = getEmailContent();

		String emailContent = smaEmailHistoryCacheModel.emailContent;

		if ((emailContent != null) && (emailContent.length() == 0)) {
			smaEmailHistoryCacheModel.emailContent = null;
		}

		smaEmailHistoryCacheModel.isActive = getIsActive();

		Date createdOn = getCreatedOn();

		if (createdOn != null) {
			smaEmailHistoryCacheModel.createdOn = createdOn.getTime();
		}
		else {
			smaEmailHistoryCacheModel.createdOn = Long.MIN_VALUE;
		}

		smaEmailHistoryCacheModel.createdBy = getCreatedBy();

		String createdBy = smaEmailHistoryCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			smaEmailHistoryCacheModel.createdBy = null;
		}

		Date updatedOn = getUpdatedOn();

		if (updatedOn != null) {
			smaEmailHistoryCacheModel.updatedOn = updatedOn.getTime();
		}
		else {
			smaEmailHistoryCacheModel.updatedOn = Long.MIN_VALUE;
		}

		smaEmailHistoryCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = smaEmailHistoryCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			smaEmailHistoryCacheModel.updatedBy = null;
		}

		return smaEmailHistoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", historyType=");
		sb.append(getHistoryType());
		sb.append(", emailFrom=");
		sb.append(getEmailFrom());
		sb.append(", emailTo=");
		sb.append(getEmailTo());
		sb.append(", emailTitle=");
		sb.append(getEmailTitle());
		sb.append(", emailContent=");
		sb.append(getEmailContent());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", createdOn=");
		sb.append(getCreatedOn());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", updatedOn=");
		sb.append(getUpdatedOn());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.pacnet.connect.model.SMAEmailHistory");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>historyType</column-name><column-value><![CDATA[");
		sb.append(getHistoryType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailFrom</column-name><column-value><![CDATA[");
		sb.append(getEmailFrom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailTo</column-name><column-value><![CDATA[");
		sb.append(getEmailTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailTitle</column-name><column-value><![CDATA[");
		sb.append(getEmailTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailContent</column-name><column-value><![CDATA[");
		sb.append(getEmailContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdOn</column-name><column-value><![CDATA[");
		sb.append(getCreatedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedOn</column-name><column-value><![CDATA[");
		sb.append(getUpdatedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SMAEmailHistory.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			SMAEmailHistory.class
		};
	private long _id;
	private String _name;
	private int _historyType;
	private String _emailFrom;
	private String _emailTo;
	private String _emailTitle;
	private String _emailContent;
	private int _isActive;
	private Date _createdOn;
	private String _createdBy;
	private Date _updatedOn;
	private String _updatedBy;
	private SMAEmailHistory _escapedModelProxy;
}
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.pacnet.connect.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.pacnet.connect.model.Facility;
import com.pacnet.connect.model.FacilityModel;
import com.pacnet.connect.model.FacilitySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Facility service. Represents a row in the &quot;Facility&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.pacnet.connect.model.FacilityModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FacilityImpl}.
 * </p>
 *
 * @author CloudSmartz
 * @see FacilityImpl
 * @see com.pacnet.connect.model.Facility
 * @see com.pacnet.connect.model.FacilityModel
 * @generated
 */
@JSON(strict = true)
public class FacilityModelImpl extends BaseModelImpl<Facility>
	implements FacilityModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a facility model instance should use the {@link com.pacnet.connect.model.Facility} interface instead.
	 */
	public static final String TABLE_NAME = "Facility";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "Name", Types.VARCHAR },
			{ "Address", Types.VARCHAR },
			{ "Phone_Number", Types.VARCHAR },
			{ "City", Types.VARCHAR },
			{ "State_ID", Types.BIGINT },
			{ "Country_ID", Types.BIGINT },
			{ "Is_Third_Party", Types.INTEGER },
			{ "Manager_ID", Types.BIGINT },
			{ "Escalation_Email", Types.VARCHAR },
			{ "IsActive", Types.BOOLEAN },
			{ "Created_On", Types.TIMESTAMP },
			{ "Created_By", Types.VARCHAR },
			{ "Updated_On", Types.TIMESTAMP },
			{ "Updated_By", Types.VARCHAR },
			{ "timezone", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Facility (ID LONG not null primary key IDENTITY,Name VARCHAR(75) null,Address VARCHAR(75) null,Phone_Number VARCHAR(75) null,City VARCHAR(75) null,State_ID LONG,Country_ID LONG,Is_Third_Party INTEGER,Manager_ID LONG,Escalation_Email VARCHAR(75) null,IsActive BOOLEAN,Created_On DATE null,Created_By VARCHAR(75) null,Updated_On DATE null,Updated_By VARCHAR(75) null,timezone VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Facility";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.pacnet.connect.model.Facility"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.pacnet.connect.model.Facility"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.pacnet.connect.model.Facility"),
			true);
	public static long COUNTRYID_COLUMN_BITMASK = 1L;
	public static long MANAGERID_COLUMN_BITMASK = 2L;
	public static long NAME_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Facility toModel(FacilitySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Facility model = new FacilityImpl();

		model.setId(soapModel.getId());
		model.setName(soapModel.getName());
		model.setAddress(soapModel.getAddress());
		model.setPhoneNumber(soapModel.getPhoneNumber());
		model.setCity(soapModel.getCity());
		model.setStateId(soapModel.getStateId());
		model.setCountryId(soapModel.getCountryId());
		model.setIsThirdParty(soapModel.getIsThirdParty());
		model.setManagerId(soapModel.getManagerId());
		model.setEscalationEmail(soapModel.getEscalationEmail());
		model.setIsActive(soapModel.getIsActive());
		model.setCreatedOn(soapModel.getCreatedOn());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setUpdatedOn(soapModel.getUpdatedOn());
		model.setUpdatedBy(soapModel.getUpdatedBy());
		model.setTimezone(soapModel.getTimezone());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Facility> toModels(FacilitySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Facility> models = new ArrayList<Facility>(soapModels.length);

		for (FacilitySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.pacnet.connect.model.Facility"));

	public FacilityModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Facility.class;
	}

	public String getModelClassName() {
		return Facility.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("name", getName());
		attributes.put("address", getAddress());
		attributes.put("phoneNumber", getPhoneNumber());
		attributes.put("city", getCity());
		attributes.put("stateId", getStateId());
		attributes.put("countryId", getCountryId());
		attributes.put("isThirdParty", getIsThirdParty());
		attributes.put("managerId", getManagerId());
		attributes.put("escalationEmail", getEscalationEmail());
		attributes.put("isActive", getIsActive());
		attributes.put("createdOn", getCreatedOn());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("updatedOn", getUpdatedOn());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("timezone", getTimezone());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String phoneNumber = (String)attributes.get("phoneNumber");

		if (phoneNumber != null) {
			setPhoneNumber(phoneNumber);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		Long stateId = (Long)attributes.get("stateId");

		if (stateId != null) {
			setStateId(stateId);
		}

		Long countryId = (Long)attributes.get("countryId");

		if (countryId != null) {
			setCountryId(countryId);
		}

		Integer isThirdParty = (Integer)attributes.get("isThirdParty");

		if (isThirdParty != null) {
			setIsThirdParty(isThirdParty);
		}

		Long managerId = (Long)attributes.get("managerId");

		if (managerId != null) {
			setManagerId(managerId);
		}

		String escalationEmail = (String)attributes.get("escalationEmail");

		if (escalationEmail != null) {
			setEscalationEmail(escalationEmail);
		}

		Boolean isActive = (Boolean)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		Date createdOn = (Date)attributes.get("createdOn");

		if (createdOn != null) {
			setCreatedOn(createdOn);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date updatedOn = (Date)attributes.get("updatedOn");

		if (updatedOn != null) {
			setUpdatedOn(updatedOn);
		}

		String updatedBy = (String)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		String timezone = (String)attributes.get("timezone");

		if (timezone != null) {
			setTimezone(timezone);
		}
	}

	@JSON
	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	@JSON
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@JSON
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	public void setAddress(String address) {
		_address = address;
	}

	@JSON
	public String getPhoneNumber() {
		if (_phoneNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _phoneNumber;
		}
	}

	public void setPhoneNumber(String phoneNumber) {
		_phoneNumber = phoneNumber;
	}

	@JSON
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	public void setCity(String city) {
		_city = city;
	}

	@JSON
	public long getStateId() {
		return _stateId;
	}

	public void setStateId(long stateId) {
		_stateId = stateId;
	}

	@JSON
	public long getCountryId() {
		return _countryId;
	}

	public void setCountryId(long countryId) {
		_columnBitmask |= COUNTRYID_COLUMN_BITMASK;

		if (!_setOriginalCountryId) {
			_setOriginalCountryId = true;

			_originalCountryId = _countryId;
		}

		_countryId = countryId;
	}

	public long getOriginalCountryId() {
		return _originalCountryId;
	}

	@JSON
	public int getIsThirdParty() {
		return _isThirdParty;
	}

	public void setIsThirdParty(int isThirdParty) {
		_isThirdParty = isThirdParty;
	}

	@JSON
	public long getManagerId() {
		return _managerId;
	}

	public void setManagerId(long managerId) {
		_columnBitmask |= MANAGERID_COLUMN_BITMASK;

		if (!_setOriginalManagerId) {
			_setOriginalManagerId = true;

			_originalManagerId = _managerId;
		}

		_managerId = managerId;
	}

	public long getOriginalManagerId() {
		return _originalManagerId;
	}

	@JSON
	public String getEscalationEmail() {
		if (_escalationEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _escalationEmail;
		}
	}

	public void setEscalationEmail(String escalationEmail) {
		_escalationEmail = escalationEmail;
	}

	@JSON
	public boolean getIsActive() {
		return _isActive;
	}

	public boolean isIsActive() {
		return _isActive;
	}

	public void setIsActive(boolean isActive) {
		_isActive = isActive;
	}

	@JSON
	public Date getCreatedOn() {
		return _createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		_createdOn = createdOn;
	}

	@JSON
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	public Date getUpdatedOn() {
		return _updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		_updatedOn = updatedOn;
	}

	@JSON
	public String getUpdatedBy() {
		if (_updatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedBy;
		}
	}

	public void setUpdatedBy(String updatedBy) {
		_updatedBy = updatedBy;
	}

	@JSON
	public String getTimezone() {
		if (_timezone == null) {
			return StringPool.BLANK;
		}
		else {
			return _timezone;
		}
	}

	public void setTimezone(String timezone) {
		_timezone = timezone;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Facility.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Facility toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Facility)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		FacilityImpl facilityImpl = new FacilityImpl();

		facilityImpl.setId(getId());
		facilityImpl.setName(getName());
		facilityImpl.setAddress(getAddress());
		facilityImpl.setPhoneNumber(getPhoneNumber());
		facilityImpl.setCity(getCity());
		facilityImpl.setStateId(getStateId());
		facilityImpl.setCountryId(getCountryId());
		facilityImpl.setIsThirdParty(getIsThirdParty());
		facilityImpl.setManagerId(getManagerId());
		facilityImpl.setEscalationEmail(getEscalationEmail());
		facilityImpl.setIsActive(getIsActive());
		facilityImpl.setCreatedOn(getCreatedOn());
		facilityImpl.setCreatedBy(getCreatedBy());
		facilityImpl.setUpdatedOn(getUpdatedOn());
		facilityImpl.setUpdatedBy(getUpdatedBy());
		facilityImpl.setTimezone(getTimezone());

		facilityImpl.resetOriginalValues();

		return facilityImpl;
	}

	public int compareTo(Facility facility) {
		long primaryKey = facility.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Facility facility = null;

		try {
			facility = (Facility)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = facility.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		FacilityModelImpl facilityModelImpl = this;

		facilityModelImpl._originalName = facilityModelImpl._name;

		facilityModelImpl._originalCountryId = facilityModelImpl._countryId;

		facilityModelImpl._setOriginalCountryId = false;

		facilityModelImpl._originalManagerId = facilityModelImpl._managerId;

		facilityModelImpl._setOriginalManagerId = false;

		facilityModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Facility> toCacheModel() {
		FacilityCacheModel facilityCacheModel = new FacilityCacheModel();

		facilityCacheModel.id = getId();

		facilityCacheModel.name = getName();

		String name = facilityCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			facilityCacheModel.name = null;
		}

		facilityCacheModel.address = getAddress();

		String address = facilityCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			facilityCacheModel.address = null;
		}

		facilityCacheModel.phoneNumber = getPhoneNumber();

		String phoneNumber = facilityCacheModel.phoneNumber;

		if ((phoneNumber != null) && (phoneNumber.length() == 0)) {
			facilityCacheModel.phoneNumber = null;
		}

		facilityCacheModel.city = getCity();

		String city = facilityCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			facilityCacheModel.city = null;
		}

		facilityCacheModel.stateId = getStateId();

		facilityCacheModel.countryId = getCountryId();

		facilityCacheModel.isThirdParty = getIsThirdParty();

		facilityCacheModel.managerId = getManagerId();

		facilityCacheModel.escalationEmail = getEscalationEmail();

		String escalationEmail = facilityCacheModel.escalationEmail;

		if ((escalationEmail != null) && (escalationEmail.length() == 0)) {
			facilityCacheModel.escalationEmail = null;
		}

		facilityCacheModel.isActive = getIsActive();

		Date createdOn = getCreatedOn();

		if (createdOn != null) {
			facilityCacheModel.createdOn = createdOn.getTime();
		}
		else {
			facilityCacheModel.createdOn = Long.MIN_VALUE;
		}

		facilityCacheModel.createdBy = getCreatedBy();

		String createdBy = facilityCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			facilityCacheModel.createdBy = null;
		}

		Date updatedOn = getUpdatedOn();

		if (updatedOn != null) {
			facilityCacheModel.updatedOn = updatedOn.getTime();
		}
		else {
			facilityCacheModel.updatedOn = Long.MIN_VALUE;
		}

		facilityCacheModel.updatedBy = getUpdatedBy();

		String updatedBy = facilityCacheModel.updatedBy;

		if ((updatedBy != null) && (updatedBy.length() == 0)) {
			facilityCacheModel.updatedBy = null;
		}

		facilityCacheModel.timezone = getTimezone();

		String timezone = facilityCacheModel.timezone;

		if ((timezone != null) && (timezone.length() == 0)) {
			facilityCacheModel.timezone = null;
		}

		return facilityCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", phoneNumber=");
		sb.append(getPhoneNumber());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", stateId=");
		sb.append(getStateId());
		sb.append(", countryId=");
		sb.append(getCountryId());
		sb.append(", isThirdParty=");
		sb.append(getIsThirdParty());
		sb.append(", managerId=");
		sb.append(getManagerId());
		sb.append(", escalationEmail=");
		sb.append(getEscalationEmail());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", createdOn=");
		sb.append(getCreatedOn());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", updatedOn=");
		sb.append(getUpdatedOn());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", timezone=");
		sb.append(getTimezone());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.pacnet.connect.model.Facility");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phoneNumber</column-name><column-value><![CDATA[");
		sb.append(getPhoneNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stateId</column-name><column-value><![CDATA[");
		sb.append(getStateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryId</column-name><column-value><![CDATA[");
		sb.append(getCountryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isThirdParty</column-name><column-value><![CDATA[");
		sb.append(getIsThirdParty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>managerId</column-name><column-value><![CDATA[");
		sb.append(getManagerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>escalationEmail</column-name><column-value><![CDATA[");
		sb.append(getEscalationEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdOn</column-name><column-value><![CDATA[");
		sb.append(getCreatedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedOn</column-name><column-value><![CDATA[");
		sb.append(getUpdatedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>timezone</column-name><column-value><![CDATA[");
		sb.append(getTimezone());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Facility.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Facility.class
		};
	private long _id;
	private String _name;
	private String _originalName;
	private String _address;
	private String _phoneNumber;
	private String _city;
	private long _stateId;
	private long _countryId;
	private long _originalCountryId;
	private boolean _setOriginalCountryId;
	private int _isThirdParty;
	private long _managerId;
	private long _originalManagerId;
	private boolean _setOriginalManagerId;
	private String _escalationEmail;
	private boolean _isActive;
	private Date _createdOn;
	private String _createdBy;
	private Date _updatedOn;
	private String _updatedBy;
	private String _timezone;
	private long _columnBitmask;
	private Facility _escapedModelProxy;
}